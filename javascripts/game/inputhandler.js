// Generated by CoffeeScript 1.3.1

if (window.CarnageGame == null) {
  window.CarnageGame = {};
}

window.CarnageGame.Key = (function() {

  function _Class() {
    this.pressed = false;
  }

  _Class.prototype.press = function() {
    return this.pressed = true;
  };

  _Class.prototype.release = function() {
    return this.pressed = false;
  };

  _Class.prototype.isPressed = function() {
    return this.pressed;
  };

  return _Class;

})();

window.CarnageGame.InputHandler = (function() {

  function _Class() {
    var down, left, right, up,
      _this = this;
    up = new CarnageGame.Key();
    down = new CarnageGame.Key();
    right = new CarnageGame.Key();
    left = new CarnageGame.Key();
    this.mouseX = 0;
    this.mouseY = 0;
    this.keys = {
      up: up,
      down: down,
      right: right,
      left: left
    };
    $('canvas#game').mousemove(function(e) {
      var offset;
      offset = $('canvas#game').parent().offset();
      _this.mouseX = e.pageX - offset.left;
      return _this.mouseY = e.pageY - offset.top;
    });
    $(document).keydown(function(e) {
      var keyCode;
      keyCode = e.keyCode;
      switch (keyCode) {
        case 38:
        case 87:
          return up.press();
        case 37:
        case 65:
          return left.press();
        case 40:
        case 83:
          return down.press();
        case 39:
        case 68:
          return right.press();
      }
    });
    $(document).keyup(function(e) {
      var keyCode;
      keyCode = e.keyCode;
      switch (keyCode) {
        case 38:
        case 87:
          return up.release();
        case 37:
        case 65:
          return left.release();
        case 40:
        case 83:
          return down.release();
        case 39:
        case 68:
          return right.release();
      }
    });
  }

  _Class.prototype.isPressed = function(id) {
    var _ref;
    return ((_ref = this.keys[id]) != null ? _ref.isPressed() : void 0) || false;
  };

  _Class.prototype.getMousePosition = function() {
    return {
      x: this.mouseX,
      y: this.mouseY
    };
  };

  _Class.prototype.renderCursor = function(screen) {
    return screen.render(this.mouseX - 16, this.mouseY - 16, {
      tileX: 0,
      tileY: 32 * 3,
      tileW: 32,
      tileH: 32
    });
  };

  return _Class;

})();
