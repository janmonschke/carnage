// Generated by CoffeeScript 1.3.1
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

if (window.CarnageGame == null) {
  window.CarnageGame = {};
}

window.CarnageGame.Player = (function(_super) {

  __extends(_Class, _super);

  _Class.prototype.tileX = 0;

  _Class.prototype.tileY = 64;

  function _Class(game, inputHandler) {
    this.game = game;
    this.inputHandler = inputHandler;
    this.direction = 0;
    this.health = 100;
    this.rotation = 0;
    this.tickCount = 0;
  }

  _Class.prototype.findSpawn = function(level) {
    var spawn;
    this.level = level;
    spawn = this.level.getRandomSpawn();
    this.x = spawn.x * 32;
    return this.y = spawn.y * 32;
  };

  _Class.prototype.tick = function(offsetX, offsetY) {
    var mousePosition, xa, ya;
    this.tickCount++;
    xa = 0;
    ya = 0;
    if (this.inputHandler.isPressed('up')) {
      ya -= 2;
    }
    if (this.inputHandler.isPressed('left')) {
      xa -= 2;
    }
    if (this.inputHandler.isPressed('right')) {
      xa += 2;
    }
    if (this.inputHandler.isPressed('down')) {
      ya += 2;
    }
    this.move(xa, ya);
    mousePosition = this.inputHandler.getMousePosition();
    this.rotation = Math.atan2(this.y + this.tileH / 2 - mousePosition.y - offsetY, this.x + this.tileW / 2 - mousePosition.x - offsetX);
    if (this.inputHandler.isPressed('shoot') && Math.round(this.tickCount % 5) === 0) {
      return this.level.add(new CarnageGame.Entities.Bullet(this, Math.cos(this.rotation) * -1, Math.sin(this.rotation) * -1));
    }
  };

  _Class.prototype.render = function(screen) {
    var ctx, mousePosition;
    screen.renderWithRotation(this.x, this.y, this.rotation, this);
    if (window.debugLevel > 0) {
      mousePosition = this.inputHandler.getMousePosition();
      ctx = $('canvas#game')[0].getContext('2d');
      ctx.strokeStyle = "#ff0000";
      ctx.lineWidth = 1;
      ctx.beginPath();
      ctx.moveTo(this.x - screen.offsetX + this.tileW / 2, this.y - screen.offsetY + this.tileW / 2);
      ctx.lineTo(mousePosition.x, mousePosition.y);
      ctx.closePath();
      return ctx.stroke();
    }
  };

  return _Class;

})(CarnageGame.Mob);
